import {promises as fs} from 'fs';
import ora from 'ora';
import path from 'path';
import {camelToSnake, capitalize} from '../../helpers/string';
import {generateFile} from '../../helpers/template';

interface Options {
  group: string;
}

/**
 * Create a new action file for React with preset
 *
 * @param {string} name
 * @param {Options} options
 * @return {Promise<void>}
 */
export default async function makeAction(name: string, options: Options) {
  const spinner = ora().start();
  spinner.start(`Generating action: ${name}`);
  const group = options.group;
  if (!group) {
    spinner.fail('Please use -g group_name to continue');
    return;
  }
  const cwd = process.cwd();

  await fs.mkdir(`${cwd}/packages/assets/src/actions/${group.toLowerCase()}`, {
    recursive: true
  });
  await generateFile(
    'action',
    {
      capitalizeName: capitalize(name),
      group,
      name,
      uppercaseName: camelToSnake(name).toUpperCase()
    },
    path.resolve(
      cwd,
      `packages/assets/src/actions/${group.toLowerCase()}/${name}.js`
    )
  );
  spinner.succeed(
    `Congratulations! Generate action: ${group}/${name} successfully`
  );
}
