import fs from 'fs';
import httpProxy from 'http-proxy';
import https from 'https';
import ora from 'ora';
import path from 'path';

interface Options {
  port: string;
  forward: string;
  credentials?: string;
}

/**
 * Serve application for enable https
 *
 * @param {Object} options
 */
export default async function serveApp(options: Options) {
  const spinner = ora().start();
  const appPort = options.port;
  const forwardPort = options.forward;
  // Create proxy to listen Firebase and forward to another port with SSL
  const apiProxy = httpProxy.createProxyServer({});
  const serverOne = `http://localhost:${forwardPort}`;

  const privateKey = fs.readFileSync(
    path.resolve(__dirname, '../../../storage/ssl/ssl.key'),
    'utf8'
  );
  const certificate = fs.readFileSync(
    path.resolve(__dirname, '../../../storage/ssl/ssl.crt'),
    'utf8'
  );
  const httpsServer = https.createServer(
    {
      cert: certificate,
      key: privateKey
    },
    (req, res) => {
      apiProxy.web(req, res, {
        target: serverOne,
        headers: {
          'X-Forwarded-Proto': 'https'
        }
      });
    }
  );
  httpsServer.listen(appPort, () => {
    spinner.info(`HTTP is running on https://localhost:${appPort}`);
  });

  const cleanExit = () => {
    process.exit();
  };
  process.on('SIGINT', cleanExit);
  process.on('SIGTERM', cleanExit);
}
